Index: valaprojectgenerator.vala
===================================================================
--- valaprojectgenerator.vala	(revision 723)
+++ valaprojectgenerator.vala	(working copy)
@@ -193,12 +193,16 @@
 			FileUtils.set_contents (project_path + "/po/ChangeLog", "", -1);
 
 			string s;
-			FileUtils.get_contents ("/usr/share/automake/INSTALL", out s);
-			FileUtils.set_contents (project_path + "/INSTALL", s, -1);
+			string automake_path = get_automake_path ();
+			if (automake_path != null) {
+				FileUtils.get_contents (automake_path + "/INSTALL", out s);
+				FileUtils.set_contents (project_path + "/INSTALL", s, -1);
+			}
 
 			string license_filename = null;
 			if (project_license == ProjectLicense.GPL2) {
-				license_filename = "/usr/share/automake/COPYING";
+				if (automake_path != null)
+					license_filename = automake_path + "/COPYING";
 			} else if (project_license == ProjectLicense.LGPL2) {
 				license_filename = "/usr/share/libtool/libltdl/COPYING.LIB";
 			}
@@ -558,6 +562,24 @@
 		FileUtils.set_contents (project_path + "/MAINTAINERS", s, -1);
 	}
 
+	private string get_automake_path () {
+		var automake_paths = new string[] { "/usr/share/automake",
+											"/usr/share/automake-1.9",
+											"/usr/share/automake-1.8",
+											"/usr/share/automake-1.7",
+											"/usr/share/local/automake",
+											"/usr/share/local/automake-1.9",
+											"/usr/share/local/automake-1.8",
+											"/usr/share/local/automake-1.7" };
+
+		foreach (weak string autopath in automake_paths) {
+			if (FileUtils.test(autopath, FileTest.IS_DIR))
+				return autopath;
+		}
+
+		return null;
+	}
+
 	static void main (string[] args) {
 		Gtk.init (ref args);
 
